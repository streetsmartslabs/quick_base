=begin
#Quick Base API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for QuickBase::FilesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @instance = QuickBase::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@instance).to be_instance_of(QuickBase::FilesApi)
    end
  end

  # unit tests for delete_file
  # Delete file
  # Deletes one file attachment version. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to delete file versions.
  # @param table_id The unique identifier of the table.
  # @param record_id The unique identifier of the record.
  # @param field_id The unique identifier of the field.
  # @param version_number The file attachment version number.
  # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
  # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
  # @return [Hash<String, Object>]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_file
  # Download file
  # Downloads the file attachment, with the file attachment content encoded in base64 format. The API response returns the file name in the &#x60;Content-Disposition&#x60; header. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to fetch files.
  # @param table_id The unique identifier of the table.
  # @param record_id The unique identifier of the record.
  # @param field_id The unique identifier of the field.
  # @param version_number The file attachment version number.
  # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
  # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
  # @return [Object]
  describe 'download_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
