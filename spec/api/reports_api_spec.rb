=begin
#Quick Base API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for QuickBase::ReportsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ReportsApi' do
  before do
    # run before each test
    @instance = QuickBase::ReportsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportsApi' do
    it 'should create an instance of ReportsApi' do
      expect(@instance).to be_instance_of(QuickBase::ReportsApi)
    end
  end

  # unit tests for get_report
  # Get a report
  # Get the schema (properties) of an individual report.
  # @param report_id The identifier of the report, unique to the table.
  # @param table_id The unique identifier of table.
  # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
  # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_agent This is entered by the person or utility invoking the API. You might custom create this or use the default one of your toolkit. Being descriptive here may offer more identification and troubleshooting capabilities.
  # @return [Hash<String, Object>]
  describe 'get_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_table_reports
  # Get reports for a table
  # Get the schema (properties) of all reports for a table. If the user running the API is an application administrator, the API will also return all personal reports with owner&#39;s user id.
  # @param table_id The unique identifier of the table.
  # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
  # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user_agent This is entered by the person or utility invoking the API. You might custom create this or use the default one of your toolkit. Being descriptive here may offer more identification and troubleshooting capabilities.
  # @return [Array<InlineResponse2001>]
  describe 'get_table_reports test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for run_report
  # Run a report
  # Runs a report, based on an ID and returns the underlying data associated with it. The format of the data will vary based on the report type. Reports that focus on record-level data (table, calendar, etc.) return the individual records. Aggregate reports (summary, chart) will return the summarized information as configured in the report. UI-specific elements are not returned, such as totals, averages and visualizations. Returns data with intelligent pagination based on the approximate size of each record. The metadata object will include the necessary information to iterate over the response and gather more data.
  # @param report_id The identifier of the report, unique to the table.
  # @param table_id The identifier of the table for the report.
  # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
  # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip The number of records to skip. You can set this value when paginating through a set of results.
  # @option opts [Integer] :top The maximum number of records to return. You can override the default Quick Base pagination to get more or fewer results. If your requested value here exceeds the dynamic maximums, we will return a subset of results and the rest can be gathered in subsequent API calls.
  # @option opts [String] :user_agent This is entered by the person or utility invoking the API. You might custom create this or use the default one of your toolkit. Being descriptive here may offer more identification and troubleshooting capabilities.
  # @option opts [Object] :generated 
  # @return [Hash<String, Object>]
  describe 'run_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
