=begin
#Quick Base API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'uri'

module QuickBase
  class FilesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete file
    # Deletes one file attachment version. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to delete file versions.
    # @param table_id The unique identifier of the table.
    # @param record_id The unique identifier of the record.
    # @param field_id The unique identifier of the field.
    # @param version_number The file attachment version number.
    # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
    # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
    # @return [Hash<String, Object>]
    def delete_file(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts = {})
      data, _status_code, _headers = delete_file_with_http_info(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts)
      data
    end

    # Delete file
    # Deletes one file attachment version. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to delete file versions.
    # @param table_id The unique identifier of the table.
    # @param record_id The unique identifier of the record.
    # @param field_id The unique identifier of the field.
    # @param version_number The file attachment version number.
    # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
    # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
    # @return [Array<(Hash<String, Object>, Fixnum, Hash)>] Hash<String, Object> data, response status code and response headers
    def delete_file_with_http_info(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FilesApi.delete_file ...'
      end
      # verify the required parameter 'table_id' is set
      if @api_client.config.client_side_validation && table_id.nil?
        fail ArgumentError, "Missing the required parameter 'table_id' when calling FilesApi.delete_file"
      end
      # verify the required parameter 'record_id' is set
      if @api_client.config.client_side_validation && record_id.nil?
        fail ArgumentError, "Missing the required parameter 'record_id' when calling FilesApi.delete_file"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FilesApi.delete_file"
      end
      # verify the required parameter 'version_number' is set
      if @api_client.config.client_side_validation && version_number.nil?
        fail ArgumentError, "Missing the required parameter 'version_number' when calling FilesApi.delete_file"
      end
      # verify the required parameter 'qb_realm_hostname' is set
      if @api_client.config.client_side_validation && qb_realm_hostname.nil?
        fail ArgumentError, "Missing the required parameter 'qb_realm_hostname' when calling FilesApi.delete_file"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling FilesApi.delete_file"
      end
      # resource path
      local_var_path = '/files/{tableId}/{recordId}/{fieldId}/{versionNumber}'.sub('{' + 'tableId' + '}', table_id.to_s).sub('{' + 'recordId' + '}', record_id.to_s).sub('{' + 'fieldId' + '}', field_id.to_s).sub('{' + 'versionNumber' + '}', version_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      header_params[:'QB-Realm-Hostname'] = qb_realm_hostname
      header_params[:'Authorization'] = authorization
      header_params[:'User-Agent'] = opts[:'user_agent'] if !opts[:'user_agent'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Hash<String, Object>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FilesApi#delete_file\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Download file
    # Downloads the file attachment, with the file attachment content encoded in base64 format. The API response returns the file name in the `Content-Disposition` header. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to fetch files.
    # @param table_id The unique identifier of the table.
    # @param record_id The unique identifier of the record.
    # @param field_id The unique identifier of the field.
    # @param version_number The file attachment version number.
    # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
    # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
    # @return [Object]
    def download_file(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts = {})
      data, _status_code, _headers = download_file_with_http_info(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts)
      data
    end

    # Download file
    # Downloads the file attachment, with the file attachment content encoded in base64 format. The API response returns the file name in the &#x60;Content-Disposition&#x60; header. Meta-data about files can be retrieved from the /records and /reports endpoints, where applicable. Use those endpoints to get the necessary information to fetch files.
    # @param table_id The unique identifier of the table.
    # @param record_id The unique identifier of the record.
    # @param field_id The unique identifier of the field.
    # @param version_number The file attachment version number.
    # @param qb_realm_hostname Your Quick Base domain, for example demo.quickbase.com
    # @param authorization The Quick Base authentication scheme you are using to authenticate the request, as described on the [authorization page](../auth).
    # @param [Hash] opts the optional parameters
    # @option opts [String] :user_agent Information is entered by the person or utility invoking the API. Choose between the default in your toolkit or custom create it. Being as descriptive as possible will help in identification and troubleshooting.
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def download_file_with_http_info(table_id, record_id, field_id, version_number, qb_realm_hostname, authorization, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FilesApi.download_file ...'
      end
      # verify the required parameter 'table_id' is set
      if @api_client.config.client_side_validation && table_id.nil?
        fail ArgumentError, "Missing the required parameter 'table_id' when calling FilesApi.download_file"
      end
      # verify the required parameter 'record_id' is set
      if @api_client.config.client_side_validation && record_id.nil?
        fail ArgumentError, "Missing the required parameter 'record_id' when calling FilesApi.download_file"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FilesApi.download_file"
      end
      # verify the required parameter 'version_number' is set
      if @api_client.config.client_side_validation && version_number.nil?
        fail ArgumentError, "Missing the required parameter 'version_number' when calling FilesApi.download_file"
      end
      # verify the required parameter 'qb_realm_hostname' is set
      if @api_client.config.client_side_validation && qb_realm_hostname.nil?
        fail ArgumentError, "Missing the required parameter 'qb_realm_hostname' when calling FilesApi.download_file"
      end
      # verify the required parameter 'authorization' is set
      if @api_client.config.client_side_validation && authorization.nil?
        fail ArgumentError, "Missing the required parameter 'authorization' when calling FilesApi.download_file"
      end
      # resource path
      local_var_path = '/files/{tableId}/{recordId}/{fieldId}/{versionNumber}'.sub('{' + 'tableId' + '}', table_id.to_s).sub('{' + 'recordId' + '}', record_id.to_s).sub('{' + 'fieldId' + '}', field_id.to_s).sub('{' + 'versionNumber' + '}', version_number.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      header_params[:'QB-Realm-Hostname'] = qb_realm_hostname
      header_params[:'Authorization'] = authorization
      header_params[:'User-Agent'] = opts[:'user_agent'] if !opts[:'user_agent'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FilesApi#download_file\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
